/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PreferencePagingList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PreferencePagingList{}

// PreferencePagingList struct for PreferencePagingList
type PreferencePagingList struct {
	Pagination Pagination `json:"pagination"`
	Entries []PreferenceEntry `json:"entries"`
}

// NewPreferencePagingList instantiates a new PreferencePagingList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPreferencePagingList(pagination Pagination, entries []PreferenceEntry) *PreferencePagingList {
	this := PreferencePagingList{}
	this.Pagination = pagination
	this.Entries = entries
	return &this
}

// NewPreferencePagingListWithDefaults instantiates a new PreferencePagingList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPreferencePagingListWithDefaults() *PreferencePagingList {
	this := PreferencePagingList{}
	return &this
}

// GetPagination returns the Pagination field value
func (o *PreferencePagingList) GetPagination() Pagination {
	if o == nil {
		var ret Pagination
		return ret
	}

	return o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value
// and a boolean to check if the value has been set.
func (o *PreferencePagingList) GetPaginationOk() (*Pagination, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pagination, true
}

// SetPagination sets field value
func (o *PreferencePagingList) SetPagination(v Pagination) {
	o.Pagination = v
}

// GetEntries returns the Entries field value
func (o *PreferencePagingList) GetEntries() []PreferenceEntry {
	if o == nil {
		var ret []PreferenceEntry
		return ret
	}

	return o.Entries
}

// GetEntriesOk returns a tuple with the Entries field value
// and a boolean to check if the value has been set.
func (o *PreferencePagingList) GetEntriesOk() ([]PreferenceEntry, bool) {
	if o == nil {
		return nil, false
	}
	return o.Entries, true
}

// SetEntries sets field value
func (o *PreferencePagingList) SetEntries(v []PreferenceEntry) {
	o.Entries = v
}

func (o PreferencePagingList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PreferencePagingList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pagination"] = o.Pagination
	toSerialize["entries"] = o.Entries
	return toSerialize, nil
}

type NullablePreferencePagingList struct {
	value *PreferencePagingList
	isSet bool
}

func (v NullablePreferencePagingList) Get() *PreferencePagingList {
	return v.value
}

func (v *NullablePreferencePagingList) Set(val *PreferencePagingList) {
	v.value = val
	v.isSet = true
}

func (v NullablePreferencePagingList) IsSet() bool {
	return v.isSet
}

func (v *NullablePreferencePagingList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreferencePagingList(val *PreferencePagingList) *NullablePreferencePagingList {
	return &NullablePreferencePagingList{value: val, isSet: true}
}

func (v NullablePreferencePagingList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreferencePagingList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


