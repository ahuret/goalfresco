/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PersonBodyUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PersonBodyUpdate{}

// PersonBodyUpdate struct for PersonBodyUpdate
type PersonBodyUpdate struct {
	FirstName *string `json:"firstName,omitempty"`
	LastName *string `json:"lastName,omitempty"`
	Description *string `json:"description,omitempty"`
	Email *string `json:"email,omitempty"`
	SkypeId *string `json:"skypeId,omitempty"`
	GoogleId *string `json:"googleId,omitempty"`
	InstantMessageId *string `json:"instantMessageId,omitempty"`
	JobTitle *string `json:"jobTitle,omitempty"`
	Location *string `json:"location,omitempty"`
	Company *Company `json:"company,omitempty"`
	Mobile *string `json:"mobile,omitempty"`
	Telephone *string `json:"telephone,omitempty"`
	UserStatus *string `json:"userStatus,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	EmailNotificationsEnabled *bool `json:"emailNotificationsEnabled,omitempty"`
	Password *string `json:"password,omitempty"`
	OldPassword *string `json:"oldPassword,omitempty"`
	AspectNames []string `json:"aspectNames,omitempty"`
	Properties map[string]interface{} `json:"properties,omitempty"`
}

// NewPersonBodyUpdate instantiates a new PersonBodyUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPersonBodyUpdate() *PersonBodyUpdate {
	this := PersonBodyUpdate{}
	return &this
}

// NewPersonBodyUpdateWithDefaults instantiates a new PersonBodyUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPersonBodyUpdateWithDefaults() *PersonBodyUpdate {
	this := PersonBodyUpdate{}
	return &this
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *PersonBodyUpdate) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonBodyUpdate) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *PersonBodyUpdate) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *PersonBodyUpdate) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *PersonBodyUpdate) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonBodyUpdate) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *PersonBodyUpdate) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *PersonBodyUpdate) SetLastName(v string) {
	o.LastName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PersonBodyUpdate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonBodyUpdate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PersonBodyUpdate) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PersonBodyUpdate) SetDescription(v string) {
	o.Description = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *PersonBodyUpdate) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonBodyUpdate) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *PersonBodyUpdate) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *PersonBodyUpdate) SetEmail(v string) {
	o.Email = &v
}

// GetSkypeId returns the SkypeId field value if set, zero value otherwise.
func (o *PersonBodyUpdate) GetSkypeId() string {
	if o == nil || IsNil(o.SkypeId) {
		var ret string
		return ret
	}
	return *o.SkypeId
}

// GetSkypeIdOk returns a tuple with the SkypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonBodyUpdate) GetSkypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.SkypeId) {
		return nil, false
	}
	return o.SkypeId, true
}

// HasSkypeId returns a boolean if a field has been set.
func (o *PersonBodyUpdate) HasSkypeId() bool {
	if o != nil && !IsNil(o.SkypeId) {
		return true
	}

	return false
}

// SetSkypeId gets a reference to the given string and assigns it to the SkypeId field.
func (o *PersonBodyUpdate) SetSkypeId(v string) {
	o.SkypeId = &v
}

// GetGoogleId returns the GoogleId field value if set, zero value otherwise.
func (o *PersonBodyUpdate) GetGoogleId() string {
	if o == nil || IsNil(o.GoogleId) {
		var ret string
		return ret
	}
	return *o.GoogleId
}

// GetGoogleIdOk returns a tuple with the GoogleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonBodyUpdate) GetGoogleIdOk() (*string, bool) {
	if o == nil || IsNil(o.GoogleId) {
		return nil, false
	}
	return o.GoogleId, true
}

// HasGoogleId returns a boolean if a field has been set.
func (o *PersonBodyUpdate) HasGoogleId() bool {
	if o != nil && !IsNil(o.GoogleId) {
		return true
	}

	return false
}

// SetGoogleId gets a reference to the given string and assigns it to the GoogleId field.
func (o *PersonBodyUpdate) SetGoogleId(v string) {
	o.GoogleId = &v
}

// GetInstantMessageId returns the InstantMessageId field value if set, zero value otherwise.
func (o *PersonBodyUpdate) GetInstantMessageId() string {
	if o == nil || IsNil(o.InstantMessageId) {
		var ret string
		return ret
	}
	return *o.InstantMessageId
}

// GetInstantMessageIdOk returns a tuple with the InstantMessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonBodyUpdate) GetInstantMessageIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstantMessageId) {
		return nil, false
	}
	return o.InstantMessageId, true
}

// HasInstantMessageId returns a boolean if a field has been set.
func (o *PersonBodyUpdate) HasInstantMessageId() bool {
	if o != nil && !IsNil(o.InstantMessageId) {
		return true
	}

	return false
}

// SetInstantMessageId gets a reference to the given string and assigns it to the InstantMessageId field.
func (o *PersonBodyUpdate) SetInstantMessageId(v string) {
	o.InstantMessageId = &v
}

// GetJobTitle returns the JobTitle field value if set, zero value otherwise.
func (o *PersonBodyUpdate) GetJobTitle() string {
	if o == nil || IsNil(o.JobTitle) {
		var ret string
		return ret
	}
	return *o.JobTitle
}

// GetJobTitleOk returns a tuple with the JobTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonBodyUpdate) GetJobTitleOk() (*string, bool) {
	if o == nil || IsNil(o.JobTitle) {
		return nil, false
	}
	return o.JobTitle, true
}

// HasJobTitle returns a boolean if a field has been set.
func (o *PersonBodyUpdate) HasJobTitle() bool {
	if o != nil && !IsNil(o.JobTitle) {
		return true
	}

	return false
}

// SetJobTitle gets a reference to the given string and assigns it to the JobTitle field.
func (o *PersonBodyUpdate) SetJobTitle(v string) {
	o.JobTitle = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *PersonBodyUpdate) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonBodyUpdate) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *PersonBodyUpdate) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *PersonBodyUpdate) SetLocation(v string) {
	o.Location = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *PersonBodyUpdate) GetCompany() Company {
	if o == nil || IsNil(o.Company) {
		var ret Company
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonBodyUpdate) GetCompanyOk() (*Company, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *PersonBodyUpdate) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given Company and assigns it to the Company field.
func (o *PersonBodyUpdate) SetCompany(v Company) {
	o.Company = &v
}

// GetMobile returns the Mobile field value if set, zero value otherwise.
func (o *PersonBodyUpdate) GetMobile() string {
	if o == nil || IsNil(o.Mobile) {
		var ret string
		return ret
	}
	return *o.Mobile
}

// GetMobileOk returns a tuple with the Mobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonBodyUpdate) GetMobileOk() (*string, bool) {
	if o == nil || IsNil(o.Mobile) {
		return nil, false
	}
	return o.Mobile, true
}

// HasMobile returns a boolean if a field has been set.
func (o *PersonBodyUpdate) HasMobile() bool {
	if o != nil && !IsNil(o.Mobile) {
		return true
	}

	return false
}

// SetMobile gets a reference to the given string and assigns it to the Mobile field.
func (o *PersonBodyUpdate) SetMobile(v string) {
	o.Mobile = &v
}

// GetTelephone returns the Telephone field value if set, zero value otherwise.
func (o *PersonBodyUpdate) GetTelephone() string {
	if o == nil || IsNil(o.Telephone) {
		var ret string
		return ret
	}
	return *o.Telephone
}

// GetTelephoneOk returns a tuple with the Telephone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonBodyUpdate) GetTelephoneOk() (*string, bool) {
	if o == nil || IsNil(o.Telephone) {
		return nil, false
	}
	return o.Telephone, true
}

// HasTelephone returns a boolean if a field has been set.
func (o *PersonBodyUpdate) HasTelephone() bool {
	if o != nil && !IsNil(o.Telephone) {
		return true
	}

	return false
}

// SetTelephone gets a reference to the given string and assigns it to the Telephone field.
func (o *PersonBodyUpdate) SetTelephone(v string) {
	o.Telephone = &v
}

// GetUserStatus returns the UserStatus field value if set, zero value otherwise.
func (o *PersonBodyUpdate) GetUserStatus() string {
	if o == nil || IsNil(o.UserStatus) {
		var ret string
		return ret
	}
	return *o.UserStatus
}

// GetUserStatusOk returns a tuple with the UserStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonBodyUpdate) GetUserStatusOk() (*string, bool) {
	if o == nil || IsNil(o.UserStatus) {
		return nil, false
	}
	return o.UserStatus, true
}

// HasUserStatus returns a boolean if a field has been set.
func (o *PersonBodyUpdate) HasUserStatus() bool {
	if o != nil && !IsNil(o.UserStatus) {
		return true
	}

	return false
}

// SetUserStatus gets a reference to the given string and assigns it to the UserStatus field.
func (o *PersonBodyUpdate) SetUserStatus(v string) {
	o.UserStatus = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *PersonBodyUpdate) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonBodyUpdate) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *PersonBodyUpdate) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *PersonBodyUpdate) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetEmailNotificationsEnabled returns the EmailNotificationsEnabled field value if set, zero value otherwise.
func (o *PersonBodyUpdate) GetEmailNotificationsEnabled() bool {
	if o == nil || IsNil(o.EmailNotificationsEnabled) {
		var ret bool
		return ret
	}
	return *o.EmailNotificationsEnabled
}

// GetEmailNotificationsEnabledOk returns a tuple with the EmailNotificationsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonBodyUpdate) GetEmailNotificationsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.EmailNotificationsEnabled) {
		return nil, false
	}
	return o.EmailNotificationsEnabled, true
}

// HasEmailNotificationsEnabled returns a boolean if a field has been set.
func (o *PersonBodyUpdate) HasEmailNotificationsEnabled() bool {
	if o != nil && !IsNil(o.EmailNotificationsEnabled) {
		return true
	}

	return false
}

// SetEmailNotificationsEnabled gets a reference to the given bool and assigns it to the EmailNotificationsEnabled field.
func (o *PersonBodyUpdate) SetEmailNotificationsEnabled(v bool) {
	o.EmailNotificationsEnabled = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *PersonBodyUpdate) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonBodyUpdate) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *PersonBodyUpdate) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *PersonBodyUpdate) SetPassword(v string) {
	o.Password = &v
}

// GetOldPassword returns the OldPassword field value if set, zero value otherwise.
func (o *PersonBodyUpdate) GetOldPassword() string {
	if o == nil || IsNil(o.OldPassword) {
		var ret string
		return ret
	}
	return *o.OldPassword
}

// GetOldPasswordOk returns a tuple with the OldPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonBodyUpdate) GetOldPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.OldPassword) {
		return nil, false
	}
	return o.OldPassword, true
}

// HasOldPassword returns a boolean if a field has been set.
func (o *PersonBodyUpdate) HasOldPassword() bool {
	if o != nil && !IsNil(o.OldPassword) {
		return true
	}

	return false
}

// SetOldPassword gets a reference to the given string and assigns it to the OldPassword field.
func (o *PersonBodyUpdate) SetOldPassword(v string) {
	o.OldPassword = &v
}

// GetAspectNames returns the AspectNames field value if set, zero value otherwise.
func (o *PersonBodyUpdate) GetAspectNames() []string {
	if o == nil || IsNil(o.AspectNames) {
		var ret []string
		return ret
	}
	return o.AspectNames
}

// GetAspectNamesOk returns a tuple with the AspectNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonBodyUpdate) GetAspectNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.AspectNames) {
		return nil, false
	}
	return o.AspectNames, true
}

// HasAspectNames returns a boolean if a field has been set.
func (o *PersonBodyUpdate) HasAspectNames() bool {
	if o != nil && !IsNil(o.AspectNames) {
		return true
	}

	return false
}

// SetAspectNames gets a reference to the given []string and assigns it to the AspectNames field.
func (o *PersonBodyUpdate) SetAspectNames(v []string) {
	o.AspectNames = v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *PersonBodyUpdate) GetProperties() map[string]interface{} {
	if o == nil || IsNil(o.Properties) {
		var ret map[string]interface{}
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonBodyUpdate) GetPropertiesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Properties) {
		return map[string]interface{}{}, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *PersonBodyUpdate) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]interface{} and assigns it to the Properties field.
func (o *PersonBodyUpdate) SetProperties(v map[string]interface{}) {
	o.Properties = v
}

func (o PersonBodyUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PersonBodyUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.SkypeId) {
		toSerialize["skypeId"] = o.SkypeId
	}
	if !IsNil(o.GoogleId) {
		toSerialize["googleId"] = o.GoogleId
	}
	if !IsNil(o.InstantMessageId) {
		toSerialize["instantMessageId"] = o.InstantMessageId
	}
	if !IsNil(o.JobTitle) {
		toSerialize["jobTitle"] = o.JobTitle
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	if !IsNil(o.Mobile) {
		toSerialize["mobile"] = o.Mobile
	}
	if !IsNil(o.Telephone) {
		toSerialize["telephone"] = o.Telephone
	}
	if !IsNil(o.UserStatus) {
		toSerialize["userStatus"] = o.UserStatus
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.EmailNotificationsEnabled) {
		toSerialize["emailNotificationsEnabled"] = o.EmailNotificationsEnabled
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.OldPassword) {
		toSerialize["oldPassword"] = o.OldPassword
	}
	if !IsNil(o.AspectNames) {
		toSerialize["aspectNames"] = o.AspectNames
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	return toSerialize, nil
}

type NullablePersonBodyUpdate struct {
	value *PersonBodyUpdate
	isSet bool
}

func (v NullablePersonBodyUpdate) Get() *PersonBodyUpdate {
	return v.value
}

func (v *NullablePersonBodyUpdate) Set(val *PersonBodyUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullablePersonBodyUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullablePersonBodyUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePersonBodyUpdate(val *PersonBodyUpdate) *NullablePersonBodyUpdate {
	return &NullablePersonBodyUpdate{value: val, isSet: true}
}

func (v NullablePersonBodyUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePersonBodyUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


