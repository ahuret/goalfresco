/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"github.com/ahuret/goalfresco/time"
)

// checks if the AuditEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditEntry{}

// AuditEntry struct for AuditEntry
type AuditEntry struct {
	Id string `json:"id"`
	AuditApplicationId string `json:"auditApplicationId"`
	CreatedByUser UserInfo `json:"createdByUser"`
	CreatedAt time.Time `json:"createdAt"`
	Values map[string]interface{} `json:"values,omitempty"`
}

// NewAuditEntry instantiates a new AuditEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditEntry(id string, auditApplicationId string, createdByUser UserInfo, createdAt time.Time) *AuditEntry {
	this := AuditEntry{}
	this.Id = id
	this.AuditApplicationId = auditApplicationId
	this.CreatedByUser = createdByUser
	this.CreatedAt = createdAt
	return &this
}

// NewAuditEntryWithDefaults instantiates a new AuditEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditEntryWithDefaults() *AuditEntry {
	this := AuditEntry{}
	return &this
}

// GetId returns the Id field value
func (o *AuditEntry) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AuditEntry) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AuditEntry) SetId(v string) {
	o.Id = v
}

// GetAuditApplicationId returns the AuditApplicationId field value
func (o *AuditEntry) GetAuditApplicationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuditApplicationId
}

// GetAuditApplicationIdOk returns a tuple with the AuditApplicationId field value
// and a boolean to check if the value has been set.
func (o *AuditEntry) GetAuditApplicationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuditApplicationId, true
}

// SetAuditApplicationId sets field value
func (o *AuditEntry) SetAuditApplicationId(v string) {
	o.AuditApplicationId = v
}

// GetCreatedByUser returns the CreatedByUser field value
func (o *AuditEntry) GetCreatedByUser() UserInfo {
	if o == nil {
		var ret UserInfo
		return ret
	}

	return o.CreatedByUser
}

// GetCreatedByUserOk returns a tuple with the CreatedByUser field value
// and a boolean to check if the value has been set.
func (o *AuditEntry) GetCreatedByUserOk() (*UserInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedByUser, true
}

// SetCreatedByUser sets field value
func (o *AuditEntry) SetCreatedByUser(v UserInfo) {
	o.CreatedByUser = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *AuditEntry) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *AuditEntry) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *AuditEntry) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *AuditEntry) GetValues() map[string]interface{} {
	if o == nil || IsNil(o.Values) {
		var ret map[string]interface{}
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditEntry) GetValuesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Values) {
		return map[string]interface{}{}, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *AuditEntry) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given map[string]interface{} and assigns it to the Values field.
func (o *AuditEntry) SetValues(v map[string]interface{}) {
	o.Values = v
}

func (o AuditEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["auditApplicationId"] = o.AuditApplicationId
	toSerialize["createdByUser"] = o.CreatedByUser
	toSerialize["createdAt"] = o.CreatedAt
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	return toSerialize, nil
}

type NullableAuditEntry struct {
	value *AuditEntry
	isSet bool
}

func (v NullableAuditEntry) Get() *AuditEntry {
	return v.value
}

func (v *NullableAuditEntry) Set(val *AuditEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditEntry(val *AuditEntry) *NullableAuditEntry {
	return &NullableAuditEntry{value: val, isSet: true}
}

func (v NullableAuditEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


