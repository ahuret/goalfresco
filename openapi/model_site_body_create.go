/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SiteBodyCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SiteBodyCreate{}

// SiteBodyCreate struct for SiteBodyCreate
type SiteBodyCreate struct {
	Id *string `json:"id,omitempty"`
	Title string `json:"title"`
	Description *string `json:"description,omitempty"`
	Visibility string `json:"visibility"`
}

// NewSiteBodyCreate instantiates a new SiteBodyCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSiteBodyCreate(title string, visibility string) *SiteBodyCreate {
	this := SiteBodyCreate{}
	this.Title = title
	this.Visibility = visibility
	return &this
}

// NewSiteBodyCreateWithDefaults instantiates a new SiteBodyCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSiteBodyCreateWithDefaults() *SiteBodyCreate {
	this := SiteBodyCreate{}
	var visibility string = "PUBLIC"
	this.Visibility = visibility
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SiteBodyCreate) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteBodyCreate) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SiteBodyCreate) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SiteBodyCreate) SetId(v string) {
	o.Id = &v
}

// GetTitle returns the Title field value
func (o *SiteBodyCreate) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *SiteBodyCreate) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *SiteBodyCreate) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SiteBodyCreate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteBodyCreate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SiteBodyCreate) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SiteBodyCreate) SetDescription(v string) {
	o.Description = &v
}

// GetVisibility returns the Visibility field value
func (o *SiteBodyCreate) GetVisibility() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value
// and a boolean to check if the value has been set.
func (o *SiteBodyCreate) GetVisibilityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Visibility, true
}

// SetVisibility sets field value
func (o *SiteBodyCreate) SetVisibility(v string) {
	o.Visibility = v
}

func (o SiteBodyCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SiteBodyCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["title"] = o.Title
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["visibility"] = o.Visibility
	return toSerialize, nil
}

type NullableSiteBodyCreate struct {
	value *SiteBodyCreate
	isSet bool
}

func (v NullableSiteBodyCreate) Get() *SiteBodyCreate {
	return v.value
}

func (v *NullableSiteBodyCreate) Set(val *SiteBodyCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableSiteBodyCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableSiteBodyCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSiteBodyCreate(val *SiteBodyCreate) *NullableSiteBodyCreate {
	return &NullableSiteBodyCreate{value: val, isSet: true}
}

func (v NullableSiteBodyCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSiteBodyCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


