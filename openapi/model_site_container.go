/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SiteContainer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SiteContainer{}

// SiteContainer struct for SiteContainer
type SiteContainer struct {
	Id string `json:"id"`
	FolderId string `json:"folderId"`
}

// NewSiteContainer instantiates a new SiteContainer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSiteContainer(id string, folderId string) *SiteContainer {
	this := SiteContainer{}
	this.Id = id
	this.FolderId = folderId
	return &this
}

// NewSiteContainerWithDefaults instantiates a new SiteContainer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSiteContainerWithDefaults() *SiteContainer {
	this := SiteContainer{}
	return &this
}

// GetId returns the Id field value
func (o *SiteContainer) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SiteContainer) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SiteContainer) SetId(v string) {
	o.Id = v
}

// GetFolderId returns the FolderId field value
func (o *SiteContainer) GetFolderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FolderId
}

// GetFolderIdOk returns a tuple with the FolderId field value
// and a boolean to check if the value has been set.
func (o *SiteContainer) GetFolderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FolderId, true
}

// SetFolderId sets field value
func (o *SiteContainer) SetFolderId(v string) {
	o.FolderId = v
}

func (o SiteContainer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SiteContainer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["folderId"] = o.FolderId
	return toSerialize, nil
}

type NullableSiteContainer struct {
	value *SiteContainer
	isSet bool
}

func (v NullableSiteContainer) Get() *SiteContainer {
	return v.value
}

func (v *NullableSiteContainer) Set(val *SiteContainer) {
	v.value = val
	v.isSet = true
}

func (v NullableSiteContainer) IsSet() bool {
	return v.isSet
}

func (v *NullableSiteContainer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSiteContainer(val *SiteContainer) *NullableSiteContainer {
	return &NullableSiteContainer{value: val, isSet: true}
}

func (v NullableSiteContainer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSiteContainer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


