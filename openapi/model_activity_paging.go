/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ActivityPaging type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivityPaging{}

// ActivityPaging struct for ActivityPaging
type ActivityPaging struct {
	List ActivityPagingList `json:"list"`
}

// NewActivityPaging instantiates a new ActivityPaging object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityPaging(list ActivityPagingList) *ActivityPaging {
	this := ActivityPaging{}
	this.List = list
	return &this
}

// NewActivityPagingWithDefaults instantiates a new ActivityPaging object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityPagingWithDefaults() *ActivityPaging {
	this := ActivityPaging{}
	return &this
}

// GetList returns the List field value
func (o *ActivityPaging) GetList() ActivityPagingList {
	if o == nil {
		var ret ActivityPagingList
		return ret
	}

	return o.List
}

// GetListOk returns a tuple with the List field value
// and a boolean to check if the value has been set.
func (o *ActivityPaging) GetListOk() (*ActivityPagingList, bool) {
	if o == nil {
		return nil, false
	}
	return &o.List, true
}

// SetList sets field value
func (o *ActivityPaging) SetList(v ActivityPagingList) {
	o.List = v
}

func (o ActivityPaging) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivityPaging) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["list"] = o.List
	return toSerialize, nil
}

type NullableActivityPaging struct {
	value *ActivityPaging
	isSet bool
}

func (v NullableActivityPaging) Get() *ActivityPaging {
	return v.value
}

func (v *NullableActivityPaging) Set(val *ActivityPaging) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityPaging) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityPaging) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityPaging(val *ActivityPaging) *NullableActivityPaging {
	return &NullableActivityPaging{value: val, isSet: true}
}

func (v NullableActivityPaging) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityPaging) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


