/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"github.com/ahuret/goalfresco/time"
)

// checks if the DirectAccessUrlBodyCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DirectAccessUrlBodyCreate{}

// DirectAccessUrlBodyCreate struct for DirectAccessUrlBodyCreate
type DirectAccessUrlBodyCreate struct {
	ExpiresAt *time.Time `json:"expiresAt,omitempty"`
	// The length of time in seconds that the url is valid for. 
	ValidFor *int32 `json:"validFor,omitempty"`
}

// NewDirectAccessUrlBodyCreate instantiates a new DirectAccessUrlBodyCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDirectAccessUrlBodyCreate() *DirectAccessUrlBodyCreate {
	this := DirectAccessUrlBodyCreate{}
	return &this
}

// NewDirectAccessUrlBodyCreateWithDefaults instantiates a new DirectAccessUrlBodyCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDirectAccessUrlBodyCreateWithDefaults() *DirectAccessUrlBodyCreate {
	this := DirectAccessUrlBodyCreate{}
	return &this
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *DirectAccessUrlBodyCreate) GetExpiresAt() time.Time {
	if o == nil || IsNil(o.ExpiresAt) {
		var ret time.Time
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectAccessUrlBodyCreate) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *DirectAccessUrlBodyCreate) HasExpiresAt() bool {
	if o != nil && !IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given time.Time and assigns it to the ExpiresAt field.
func (o *DirectAccessUrlBodyCreate) SetExpiresAt(v time.Time) {
	o.ExpiresAt = &v
}

// GetValidFor returns the ValidFor field value if set, zero value otherwise.
func (o *DirectAccessUrlBodyCreate) GetValidFor() int32 {
	if o == nil || IsNil(o.ValidFor) {
		var ret int32
		return ret
	}
	return *o.ValidFor
}

// GetValidForOk returns a tuple with the ValidFor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectAccessUrlBodyCreate) GetValidForOk() (*int32, bool) {
	if o == nil || IsNil(o.ValidFor) {
		return nil, false
	}
	return o.ValidFor, true
}

// HasValidFor returns a boolean if a field has been set.
func (o *DirectAccessUrlBodyCreate) HasValidFor() bool {
	if o != nil && !IsNil(o.ValidFor) {
		return true
	}

	return false
}

// SetValidFor gets a reference to the given int32 and assigns it to the ValidFor field.
func (o *DirectAccessUrlBodyCreate) SetValidFor(v int32) {
	o.ValidFor = &v
}

func (o DirectAccessUrlBodyCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DirectAccessUrlBodyCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExpiresAt) {
		toSerialize["expiresAt"] = o.ExpiresAt
	}
	if !IsNil(o.ValidFor) {
		toSerialize["validFor"] = o.ValidFor
	}
	return toSerialize, nil
}

type NullableDirectAccessUrlBodyCreate struct {
	value *DirectAccessUrlBodyCreate
	isSet bool
}

func (v NullableDirectAccessUrlBodyCreate) Get() *DirectAccessUrlBodyCreate {
	return v.value
}

func (v *NullableDirectAccessUrlBodyCreate) Set(val *DirectAccessUrlBodyCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableDirectAccessUrlBodyCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableDirectAccessUrlBodyCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDirectAccessUrlBodyCreate(val *DirectAccessUrlBodyCreate) *NullableDirectAccessUrlBodyCreate {
	return &NullableDirectAccessUrlBodyCreate{value: val, isSet: true}
}

func (v NullableDirectAccessUrlBodyCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDirectAccessUrlBodyCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


