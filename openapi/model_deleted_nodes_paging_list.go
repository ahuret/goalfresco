/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DeletedNodesPagingList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeletedNodesPagingList{}

// DeletedNodesPagingList struct for DeletedNodesPagingList
type DeletedNodesPagingList struct {
	Pagination *Pagination `json:"pagination,omitempty"`
	Entries []DeletedNodeEntry `json:"entries,omitempty"`
}

// NewDeletedNodesPagingList instantiates a new DeletedNodesPagingList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeletedNodesPagingList() *DeletedNodesPagingList {
	this := DeletedNodesPagingList{}
	return &this
}

// NewDeletedNodesPagingListWithDefaults instantiates a new DeletedNodesPagingList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeletedNodesPagingListWithDefaults() *DeletedNodesPagingList {
	this := DeletedNodesPagingList{}
	return &this
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *DeletedNodesPagingList) GetPagination() Pagination {
	if o == nil || IsNil(o.Pagination) {
		var ret Pagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletedNodesPagingList) GetPaginationOk() (*Pagination, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *DeletedNodesPagingList) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given Pagination and assigns it to the Pagination field.
func (o *DeletedNodesPagingList) SetPagination(v Pagination) {
	o.Pagination = &v
}

// GetEntries returns the Entries field value if set, zero value otherwise.
func (o *DeletedNodesPagingList) GetEntries() []DeletedNodeEntry {
	if o == nil || IsNil(o.Entries) {
		var ret []DeletedNodeEntry
		return ret
	}
	return o.Entries
}

// GetEntriesOk returns a tuple with the Entries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletedNodesPagingList) GetEntriesOk() ([]DeletedNodeEntry, bool) {
	if o == nil || IsNil(o.Entries) {
		return nil, false
	}
	return o.Entries, true
}

// HasEntries returns a boolean if a field has been set.
func (o *DeletedNodesPagingList) HasEntries() bool {
	if o != nil && !IsNil(o.Entries) {
		return true
	}

	return false
}

// SetEntries gets a reference to the given []DeletedNodeEntry and assigns it to the Entries field.
func (o *DeletedNodesPagingList) SetEntries(v []DeletedNodeEntry) {
	o.Entries = v
}

func (o DeletedNodesPagingList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeletedNodesPagingList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	if !IsNil(o.Entries) {
		toSerialize["entries"] = o.Entries
	}
	return toSerialize, nil
}

type NullableDeletedNodesPagingList struct {
	value *DeletedNodesPagingList
	isSet bool
}

func (v NullableDeletedNodesPagingList) Get() *DeletedNodesPagingList {
	return v.value
}

func (v *NullableDeletedNodesPagingList) Set(val *DeletedNodesPagingList) {
	v.value = val
	v.isSet = true
}

func (v NullableDeletedNodesPagingList) IsSet() bool {
	return v.isSet
}

func (v *NullableDeletedNodesPagingList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeletedNodesPagingList(val *DeletedNodesPagingList) *NullableDeletedNodesPagingList {
	return &NullableDeletedNodesPagingList{value: val, isSet: true}
}

func (v NullableDeletedNodesPagingList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeletedNodesPagingList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


