/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GroupMemberPaging type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupMemberPaging{}

// GroupMemberPaging struct for GroupMemberPaging
type GroupMemberPaging struct {
	List *GroupMemberPagingList `json:"list,omitempty"`
}

// NewGroupMemberPaging instantiates a new GroupMemberPaging object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupMemberPaging() *GroupMemberPaging {
	this := GroupMemberPaging{}
	return &this
}

// NewGroupMemberPagingWithDefaults instantiates a new GroupMemberPaging object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupMemberPagingWithDefaults() *GroupMemberPaging {
	this := GroupMemberPaging{}
	return &this
}

// GetList returns the List field value if set, zero value otherwise.
func (o *GroupMemberPaging) GetList() GroupMemberPagingList {
	if o == nil || IsNil(o.List) {
		var ret GroupMemberPagingList
		return ret
	}
	return *o.List
}

// GetListOk returns a tuple with the List field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupMemberPaging) GetListOk() (*GroupMemberPagingList, bool) {
	if o == nil || IsNil(o.List) {
		return nil, false
	}
	return o.List, true
}

// HasList returns a boolean if a field has been set.
func (o *GroupMemberPaging) HasList() bool {
	if o != nil && !IsNil(o.List) {
		return true
	}

	return false
}

// SetList gets a reference to the given GroupMemberPagingList and assigns it to the List field.
func (o *GroupMemberPaging) SetList(v GroupMemberPagingList) {
	o.List = &v
}

func (o GroupMemberPaging) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupMemberPaging) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.List) {
		toSerialize["list"] = o.List
	}
	return toSerialize, nil
}

type NullableGroupMemberPaging struct {
	value *GroupMemberPaging
	isSet bool
}

func (v NullableGroupMemberPaging) Get() *GroupMemberPaging {
	return v.value
}

func (v *NullableGroupMemberPaging) Set(val *GroupMemberPaging) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupMemberPaging) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupMemberPaging) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupMemberPaging(val *GroupMemberPaging) *NullableGroupMemberPaging {
	return &NullableGroupMemberPaging{value: val, isSet: true}
}

func (v NullableGroupMemberPaging) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupMemberPaging) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


