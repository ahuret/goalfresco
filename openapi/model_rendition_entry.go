/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RenditionEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RenditionEntry{}

// RenditionEntry struct for RenditionEntry
type RenditionEntry struct {
	Entry Rendition `json:"entry"`
}

// NewRenditionEntry instantiates a new RenditionEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenditionEntry(entry Rendition) *RenditionEntry {
	this := RenditionEntry{}
	this.Entry = entry
	return &this
}

// NewRenditionEntryWithDefaults instantiates a new RenditionEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenditionEntryWithDefaults() *RenditionEntry {
	this := RenditionEntry{}
	return &this
}

// GetEntry returns the Entry field value
func (o *RenditionEntry) GetEntry() Rendition {
	if o == nil {
		var ret Rendition
		return ret
	}

	return o.Entry
}

// GetEntryOk returns a tuple with the Entry field value
// and a boolean to check if the value has been set.
func (o *RenditionEntry) GetEntryOk() (*Rendition, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entry, true
}

// SetEntry sets field value
func (o *RenditionEntry) SetEntry(v Rendition) {
	o.Entry = v
}

func (o RenditionEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RenditionEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["entry"] = o.Entry
	return toSerialize, nil
}

type NullableRenditionEntry struct {
	value *RenditionEntry
	isSet bool
}

func (v NullableRenditionEntry) Get() *RenditionEntry {
	return v.value
}

func (v *NullableRenditionEntry) Set(val *RenditionEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableRenditionEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableRenditionEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenditionEntry(val *RenditionEntry) *NullableRenditionEntry {
	return &NullableRenditionEntry{value: val, isSet: true}
}

func (v NullableRenditionEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenditionEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


