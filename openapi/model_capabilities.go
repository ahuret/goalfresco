/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Capabilities type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Capabilities{}

// Capabilities struct for Capabilities
type Capabilities struct {
	IsAdmin *bool `json:"isAdmin,omitempty"`
	IsGuest *bool `json:"isGuest,omitempty"`
	IsMutable *bool `json:"isMutable,omitempty"`
}

// NewCapabilities instantiates a new Capabilities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCapabilities() *Capabilities {
	this := Capabilities{}
	return &this
}

// NewCapabilitiesWithDefaults instantiates a new Capabilities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCapabilitiesWithDefaults() *Capabilities {
	this := Capabilities{}
	return &this
}

// GetIsAdmin returns the IsAdmin field value if set, zero value otherwise.
func (o *Capabilities) GetIsAdmin() bool {
	if o == nil || IsNil(o.IsAdmin) {
		var ret bool
		return ret
	}
	return *o.IsAdmin
}

// GetIsAdminOk returns a tuple with the IsAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capabilities) GetIsAdminOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAdmin) {
		return nil, false
	}
	return o.IsAdmin, true
}

// HasIsAdmin returns a boolean if a field has been set.
func (o *Capabilities) HasIsAdmin() bool {
	if o != nil && !IsNil(o.IsAdmin) {
		return true
	}

	return false
}

// SetIsAdmin gets a reference to the given bool and assigns it to the IsAdmin field.
func (o *Capabilities) SetIsAdmin(v bool) {
	o.IsAdmin = &v
}

// GetIsGuest returns the IsGuest field value if set, zero value otherwise.
func (o *Capabilities) GetIsGuest() bool {
	if o == nil || IsNil(o.IsGuest) {
		var ret bool
		return ret
	}
	return *o.IsGuest
}

// GetIsGuestOk returns a tuple with the IsGuest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capabilities) GetIsGuestOk() (*bool, bool) {
	if o == nil || IsNil(o.IsGuest) {
		return nil, false
	}
	return o.IsGuest, true
}

// HasIsGuest returns a boolean if a field has been set.
func (o *Capabilities) HasIsGuest() bool {
	if o != nil && !IsNil(o.IsGuest) {
		return true
	}

	return false
}

// SetIsGuest gets a reference to the given bool and assigns it to the IsGuest field.
func (o *Capabilities) SetIsGuest(v bool) {
	o.IsGuest = &v
}

// GetIsMutable returns the IsMutable field value if set, zero value otherwise.
func (o *Capabilities) GetIsMutable() bool {
	if o == nil || IsNil(o.IsMutable) {
		var ret bool
		return ret
	}
	return *o.IsMutable
}

// GetIsMutableOk returns a tuple with the IsMutable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Capabilities) GetIsMutableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMutable) {
		return nil, false
	}
	return o.IsMutable, true
}

// HasIsMutable returns a boolean if a field has been set.
func (o *Capabilities) HasIsMutable() bool {
	if o != nil && !IsNil(o.IsMutable) {
		return true
	}

	return false
}

// SetIsMutable gets a reference to the given bool and assigns it to the IsMutable field.
func (o *Capabilities) SetIsMutable(v bool) {
	o.IsMutable = &v
}

func (o Capabilities) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Capabilities) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsAdmin) {
		toSerialize["isAdmin"] = o.IsAdmin
	}
	if !IsNil(o.IsGuest) {
		toSerialize["isGuest"] = o.IsGuest
	}
	if !IsNil(o.IsMutable) {
		toSerialize["isMutable"] = o.IsMutable
	}
	return toSerialize, nil
}

type NullableCapabilities struct {
	value *Capabilities
	isSet bool
}

func (v NullableCapabilities) Get() *Capabilities {
	return v.value
}

func (v *NullableCapabilities) Set(val *Capabilities) {
	v.value = val
	v.isSet = true
}

func (v NullableCapabilities) IsSet() bool {
	return v.isSet
}

func (v *NullableCapabilities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCapabilities(val *Capabilities) *NullableCapabilities {
	return &NullableCapabilities{value: val, isSet: true}
}

func (v NullableCapabilities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCapabilities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


