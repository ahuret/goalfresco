/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"github.com/ahuret/goalfresco/time"
)

// checks if the Activity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Activity{}

// Activity Activities describe any past activity in a site, for example creating an item of content, commenting on a node, liking an item of content. 
type Activity struct {
	// The id of the person who performed the activity
	PostPersonId string `json:"postPersonId"`
	// The unique id of the activity
	Id int64 `json:"id"`
	// The unique id of the site on which the activity was performed
	SiteId *string `json:"siteId,omitempty"`
	// The date time at which the activity was performed
	PostedAt *time.Time `json:"postedAt,omitempty"`
	// The feed on which this activity was posted
	FeedPersonId string `json:"feedPersonId"`
	// An object summarizing the activity
	ActivitySummary *map[string]string `json:"activitySummary,omitempty"`
	// The type of the activity posted
	ActivityType string `json:"activityType"`
}

// NewActivity instantiates a new Activity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivity(postPersonId string, id int64, feedPersonId string, activityType string) *Activity {
	this := Activity{}
	this.PostPersonId = postPersonId
	this.Id = id
	this.FeedPersonId = feedPersonId
	this.ActivityType = activityType
	return &this
}

// NewActivityWithDefaults instantiates a new Activity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityWithDefaults() *Activity {
	this := Activity{}
	return &this
}

// GetPostPersonId returns the PostPersonId field value
func (o *Activity) GetPostPersonId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PostPersonId
}

// GetPostPersonIdOk returns a tuple with the PostPersonId field value
// and a boolean to check if the value has been set.
func (o *Activity) GetPostPersonIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PostPersonId, true
}

// SetPostPersonId sets field value
func (o *Activity) SetPostPersonId(v string) {
	o.PostPersonId = v
}

// GetId returns the Id field value
func (o *Activity) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Activity) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Activity) SetId(v int64) {
	o.Id = v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *Activity) GetSiteId() string {
	if o == nil || IsNil(o.SiteId) {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Activity) GetSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *Activity) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *Activity) SetSiteId(v string) {
	o.SiteId = &v
}

// GetPostedAt returns the PostedAt field value if set, zero value otherwise.
func (o *Activity) GetPostedAt() time.Time {
	if o == nil || IsNil(o.PostedAt) {
		var ret time.Time
		return ret
	}
	return *o.PostedAt
}

// GetPostedAtOk returns a tuple with the PostedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Activity) GetPostedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.PostedAt) {
		return nil, false
	}
	return o.PostedAt, true
}

// HasPostedAt returns a boolean if a field has been set.
func (o *Activity) HasPostedAt() bool {
	if o != nil && !IsNil(o.PostedAt) {
		return true
	}

	return false
}

// SetPostedAt gets a reference to the given time.Time and assigns it to the PostedAt field.
func (o *Activity) SetPostedAt(v time.Time) {
	o.PostedAt = &v
}

// GetFeedPersonId returns the FeedPersonId field value
func (o *Activity) GetFeedPersonId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeedPersonId
}

// GetFeedPersonIdOk returns a tuple with the FeedPersonId field value
// and a boolean to check if the value has been set.
func (o *Activity) GetFeedPersonIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeedPersonId, true
}

// SetFeedPersonId sets field value
func (o *Activity) SetFeedPersonId(v string) {
	o.FeedPersonId = v
}

// GetActivitySummary returns the ActivitySummary field value if set, zero value otherwise.
func (o *Activity) GetActivitySummary() map[string]string {
	if o == nil || IsNil(o.ActivitySummary) {
		var ret map[string]string
		return ret
	}
	return *o.ActivitySummary
}

// GetActivitySummaryOk returns a tuple with the ActivitySummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Activity) GetActivitySummaryOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ActivitySummary) {
		return nil, false
	}
	return o.ActivitySummary, true
}

// HasActivitySummary returns a boolean if a field has been set.
func (o *Activity) HasActivitySummary() bool {
	if o != nil && !IsNil(o.ActivitySummary) {
		return true
	}

	return false
}

// SetActivitySummary gets a reference to the given map[string]string and assigns it to the ActivitySummary field.
func (o *Activity) SetActivitySummary(v map[string]string) {
	o.ActivitySummary = &v
}

// GetActivityType returns the ActivityType field value
func (o *Activity) GetActivityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActivityType
}

// GetActivityTypeOk returns a tuple with the ActivityType field value
// and a boolean to check if the value has been set.
func (o *Activity) GetActivityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActivityType, true
}

// SetActivityType sets field value
func (o *Activity) SetActivityType(v string) {
	o.ActivityType = v
}

func (o Activity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Activity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["postPersonId"] = o.PostPersonId
	toSerialize["id"] = o.Id
	if !IsNil(o.SiteId) {
		toSerialize["siteId"] = o.SiteId
	}
	if !IsNil(o.PostedAt) {
		toSerialize["postedAt"] = o.PostedAt
	}
	toSerialize["feedPersonId"] = o.FeedPersonId
	if !IsNil(o.ActivitySummary) {
		toSerialize["activitySummary"] = o.ActivitySummary
	}
	toSerialize["activityType"] = o.ActivityType
	return toSerialize, nil
}

type NullableActivity struct {
	value *Activity
	isSet bool
}

func (v NullableActivity) Get() *Activity {
	return v.value
}

func (v *NullableActivity) Set(val *Activity) {
	v.value = val
	v.isSet = true
}

func (v NullableActivity) IsSet() bool {
	return v.isSet
}

func (v *NullableActivity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivity(val *Activity) *NullableActivity {
	return &NullableActivity{value: val, isSet: true}
}

func (v NullableActivity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


