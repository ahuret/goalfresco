/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Download type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Download{}

// Download struct for Download
type Download struct {
	// number of files added so far in the zip
	FilesAdded *int32 `json:"filesAdded,omitempty"`
	// number of bytes added so far in the zip
	BytesAdded *int32 `json:"bytesAdded,omitempty"`
	// the id of the download node
	Id *string `json:"id,omitempty"`
	// the total number of files to be added in the zip
	TotalFiles *int32 `json:"totalFiles,omitempty"`
	// the total number of bytes to be added in the zip
	TotalBytes *int32 `json:"totalBytes,omitempty"`
	// the current status of the download node creation
	Status *string `json:"status,omitempty"`
}

// NewDownload instantiates a new Download object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDownload() *Download {
	this := Download{}
	var status string = "PENDING"
	this.Status = &status
	return &this
}

// NewDownloadWithDefaults instantiates a new Download object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDownloadWithDefaults() *Download {
	this := Download{}
	var status string = "PENDING"
	this.Status = &status
	return &this
}

// GetFilesAdded returns the FilesAdded field value if set, zero value otherwise.
func (o *Download) GetFilesAdded() int32 {
	if o == nil || IsNil(o.FilesAdded) {
		var ret int32
		return ret
	}
	return *o.FilesAdded
}

// GetFilesAddedOk returns a tuple with the FilesAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Download) GetFilesAddedOk() (*int32, bool) {
	if o == nil || IsNil(o.FilesAdded) {
		return nil, false
	}
	return o.FilesAdded, true
}

// HasFilesAdded returns a boolean if a field has been set.
func (o *Download) HasFilesAdded() bool {
	if o != nil && !IsNil(o.FilesAdded) {
		return true
	}

	return false
}

// SetFilesAdded gets a reference to the given int32 and assigns it to the FilesAdded field.
func (o *Download) SetFilesAdded(v int32) {
	o.FilesAdded = &v
}

// GetBytesAdded returns the BytesAdded field value if set, zero value otherwise.
func (o *Download) GetBytesAdded() int32 {
	if o == nil || IsNil(o.BytesAdded) {
		var ret int32
		return ret
	}
	return *o.BytesAdded
}

// GetBytesAddedOk returns a tuple with the BytesAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Download) GetBytesAddedOk() (*int32, bool) {
	if o == nil || IsNil(o.BytesAdded) {
		return nil, false
	}
	return o.BytesAdded, true
}

// HasBytesAdded returns a boolean if a field has been set.
func (o *Download) HasBytesAdded() bool {
	if o != nil && !IsNil(o.BytesAdded) {
		return true
	}

	return false
}

// SetBytesAdded gets a reference to the given int32 and assigns it to the BytesAdded field.
func (o *Download) SetBytesAdded(v int32) {
	o.BytesAdded = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Download) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Download) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Download) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Download) SetId(v string) {
	o.Id = &v
}

// GetTotalFiles returns the TotalFiles field value if set, zero value otherwise.
func (o *Download) GetTotalFiles() int32 {
	if o == nil || IsNil(o.TotalFiles) {
		var ret int32
		return ret
	}
	return *o.TotalFiles
}

// GetTotalFilesOk returns a tuple with the TotalFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Download) GetTotalFilesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalFiles) {
		return nil, false
	}
	return o.TotalFiles, true
}

// HasTotalFiles returns a boolean if a field has been set.
func (o *Download) HasTotalFiles() bool {
	if o != nil && !IsNil(o.TotalFiles) {
		return true
	}

	return false
}

// SetTotalFiles gets a reference to the given int32 and assigns it to the TotalFiles field.
func (o *Download) SetTotalFiles(v int32) {
	o.TotalFiles = &v
}

// GetTotalBytes returns the TotalBytes field value if set, zero value otherwise.
func (o *Download) GetTotalBytes() int32 {
	if o == nil || IsNil(o.TotalBytes) {
		var ret int32
		return ret
	}
	return *o.TotalBytes
}

// GetTotalBytesOk returns a tuple with the TotalBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Download) GetTotalBytesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalBytes) {
		return nil, false
	}
	return o.TotalBytes, true
}

// HasTotalBytes returns a boolean if a field has been set.
func (o *Download) HasTotalBytes() bool {
	if o != nil && !IsNil(o.TotalBytes) {
		return true
	}

	return false
}

// SetTotalBytes gets a reference to the given int32 and assigns it to the TotalBytes field.
func (o *Download) SetTotalBytes(v int32) {
	o.TotalBytes = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Download) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Download) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Download) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Download) SetStatus(v string) {
	o.Status = &v
}

func (o Download) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Download) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FilesAdded) {
		toSerialize["filesAdded"] = o.FilesAdded
	}
	if !IsNil(o.BytesAdded) {
		toSerialize["bytesAdded"] = o.BytesAdded
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.TotalFiles) {
		toSerialize["totalFiles"] = o.TotalFiles
	}
	if !IsNil(o.TotalBytes) {
		toSerialize["totalBytes"] = o.TotalBytes
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableDownload struct {
	value *Download
	isSet bool
}

func (v NullableDownload) Get() *Download {
	return v.value
}

func (v *NullableDownload) Set(val *Download) {
	v.value = val
	v.isSet = true
}

func (v NullableDownload) IsSet() bool {
	return v.isSet
}

func (v *NullableDownload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDownload(val *Download) *NullableDownload {
	return &NullableDownload{value: val, isSet: true}
}

func (v NullableDownload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDownload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


