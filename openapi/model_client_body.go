/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ClientBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientBody{}

// ClientBody struct for ClientBody
type ClientBody struct {
	// the client name
	Client string `json:"client"`
}

// NewClientBody instantiates a new ClientBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientBody(client string) *ClientBody {
	this := ClientBody{}
	this.Client = client
	return &this
}

// NewClientBodyWithDefaults instantiates a new ClientBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientBodyWithDefaults() *ClientBody {
	this := ClientBody{}
	return &this
}

// GetClient returns the Client field value
func (o *ClientBody) GetClient() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Client
}

// GetClientOk returns a tuple with the Client field value
// and a boolean to check if the value has been set.
func (o *ClientBody) GetClientOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Client, true
}

// SetClient sets field value
func (o *ClientBody) SetClient(v string) {
	o.Client = v
}

func (o ClientBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["client"] = o.Client
	return toSerialize, nil
}

type NullableClientBody struct {
	value *ClientBody
	isSet bool
}

func (v NullableClientBody) Get() *ClientBody {
	return v.value
}

func (v *NullableClientBody) Set(val *ClientBody) {
	v.value = val
	v.isSet = true
}

func (v NullableClientBody) IsSet() bool {
	return v.isSet
}

func (v *NullableClientBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientBody(val *ClientBody) *NullableClientBody {
	return &NullableClientBody{value: val, isSet: true}
}

func (v NullableClientBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


