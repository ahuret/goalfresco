/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ActionExecResultEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActionExecResultEntry{}

// ActionExecResultEntry struct for ActionExecResultEntry
type ActionExecResultEntry struct {
	Entry ActionExecResult `json:"entry"`
}

// NewActionExecResultEntry instantiates a new ActionExecResultEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionExecResultEntry(entry ActionExecResult) *ActionExecResultEntry {
	this := ActionExecResultEntry{}
	this.Entry = entry
	return &this
}

// NewActionExecResultEntryWithDefaults instantiates a new ActionExecResultEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionExecResultEntryWithDefaults() *ActionExecResultEntry {
	this := ActionExecResultEntry{}
	return &this
}

// GetEntry returns the Entry field value
func (o *ActionExecResultEntry) GetEntry() ActionExecResult {
	if o == nil {
		var ret ActionExecResult
		return ret
	}

	return o.Entry
}

// GetEntryOk returns a tuple with the Entry field value
// and a boolean to check if the value has been set.
func (o *ActionExecResultEntry) GetEntryOk() (*ActionExecResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entry, true
}

// SetEntry sets field value
func (o *ActionExecResultEntry) SetEntry(v ActionExecResult) {
	o.Entry = v
}

func (o ActionExecResultEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActionExecResultEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["entry"] = o.Entry
	return toSerialize, nil
}

type NullableActionExecResultEntry struct {
	value *ActionExecResultEntry
	isSet bool
}

func (v NullableActionExecResultEntry) Get() *ActionExecResultEntry {
	return v.value
}

func (v *NullableActionExecResultEntry) Set(val *ActionExecResultEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableActionExecResultEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableActionExecResultEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionExecResultEntry(val *ActionExecResultEntry) *NullableActionExecResultEntry {
	return &NullableActionExecResultEntry{value: val, isSet: true}
}

func (v NullableActionExecResultEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionExecResultEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


