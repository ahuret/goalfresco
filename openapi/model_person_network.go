/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"github.com/ahuret/goalfresco/time"
)

// checks if the PersonNetwork type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PersonNetwork{}

// PersonNetwork A network is the group of users and sites that belong to an organization. Networks are organized by email domain. When a user signs up for an Alfresco account , their email domain becomes their Home Network. 
type PersonNetwork struct {
	// This network's unique id
	Id string `json:"id"`
	// Is this the home network?
	HomeNetwork *bool `json:"homeNetwork,omitempty"`
	IsEnabled bool `json:"isEnabled"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	PaidNetwork *bool `json:"paidNetwork,omitempty"`
	SubscriptionLevel *string `json:"subscriptionLevel,omitempty"`
	Quotas []NetworkQuota `json:"quotas,omitempty"`
}

// NewPersonNetwork instantiates a new PersonNetwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPersonNetwork(id string, isEnabled bool) *PersonNetwork {
	this := PersonNetwork{}
	this.Id = id
	this.IsEnabled = isEnabled
	return &this
}

// NewPersonNetworkWithDefaults instantiates a new PersonNetwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPersonNetworkWithDefaults() *PersonNetwork {
	this := PersonNetwork{}
	return &this
}

// GetId returns the Id field value
func (o *PersonNetwork) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PersonNetwork) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PersonNetwork) SetId(v string) {
	o.Id = v
}

// GetHomeNetwork returns the HomeNetwork field value if set, zero value otherwise.
func (o *PersonNetwork) GetHomeNetwork() bool {
	if o == nil || IsNil(o.HomeNetwork) {
		var ret bool
		return ret
	}
	return *o.HomeNetwork
}

// GetHomeNetworkOk returns a tuple with the HomeNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonNetwork) GetHomeNetworkOk() (*bool, bool) {
	if o == nil || IsNil(o.HomeNetwork) {
		return nil, false
	}
	return o.HomeNetwork, true
}

// HasHomeNetwork returns a boolean if a field has been set.
func (o *PersonNetwork) HasHomeNetwork() bool {
	if o != nil && !IsNil(o.HomeNetwork) {
		return true
	}

	return false
}

// SetHomeNetwork gets a reference to the given bool and assigns it to the HomeNetwork field.
func (o *PersonNetwork) SetHomeNetwork(v bool) {
	o.HomeNetwork = &v
}

// GetIsEnabled returns the IsEnabled field value
func (o *PersonNetwork) GetIsEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value
// and a boolean to check if the value has been set.
func (o *PersonNetwork) GetIsEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsEnabled, true
}

// SetIsEnabled sets field value
func (o *PersonNetwork) SetIsEnabled(v bool) {
	o.IsEnabled = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PersonNetwork) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonNetwork) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PersonNetwork) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PersonNetwork) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetPaidNetwork returns the PaidNetwork field value if set, zero value otherwise.
func (o *PersonNetwork) GetPaidNetwork() bool {
	if o == nil || IsNil(o.PaidNetwork) {
		var ret bool
		return ret
	}
	return *o.PaidNetwork
}

// GetPaidNetworkOk returns a tuple with the PaidNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonNetwork) GetPaidNetworkOk() (*bool, bool) {
	if o == nil || IsNil(o.PaidNetwork) {
		return nil, false
	}
	return o.PaidNetwork, true
}

// HasPaidNetwork returns a boolean if a field has been set.
func (o *PersonNetwork) HasPaidNetwork() bool {
	if o != nil && !IsNil(o.PaidNetwork) {
		return true
	}

	return false
}

// SetPaidNetwork gets a reference to the given bool and assigns it to the PaidNetwork field.
func (o *PersonNetwork) SetPaidNetwork(v bool) {
	o.PaidNetwork = &v
}

// GetSubscriptionLevel returns the SubscriptionLevel field value if set, zero value otherwise.
func (o *PersonNetwork) GetSubscriptionLevel() string {
	if o == nil || IsNil(o.SubscriptionLevel) {
		var ret string
		return ret
	}
	return *o.SubscriptionLevel
}

// GetSubscriptionLevelOk returns a tuple with the SubscriptionLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonNetwork) GetSubscriptionLevelOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionLevel) {
		return nil, false
	}
	return o.SubscriptionLevel, true
}

// HasSubscriptionLevel returns a boolean if a field has been set.
func (o *PersonNetwork) HasSubscriptionLevel() bool {
	if o != nil && !IsNil(o.SubscriptionLevel) {
		return true
	}

	return false
}

// SetSubscriptionLevel gets a reference to the given string and assigns it to the SubscriptionLevel field.
func (o *PersonNetwork) SetSubscriptionLevel(v string) {
	o.SubscriptionLevel = &v
}

// GetQuotas returns the Quotas field value if set, zero value otherwise.
func (o *PersonNetwork) GetQuotas() []NetworkQuota {
	if o == nil || IsNil(o.Quotas) {
		var ret []NetworkQuota
		return ret
	}
	return o.Quotas
}

// GetQuotasOk returns a tuple with the Quotas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonNetwork) GetQuotasOk() ([]NetworkQuota, bool) {
	if o == nil || IsNil(o.Quotas) {
		return nil, false
	}
	return o.Quotas, true
}

// HasQuotas returns a boolean if a field has been set.
func (o *PersonNetwork) HasQuotas() bool {
	if o != nil && !IsNil(o.Quotas) {
		return true
	}

	return false
}

// SetQuotas gets a reference to the given []NetworkQuota and assigns it to the Quotas field.
func (o *PersonNetwork) SetQuotas(v []NetworkQuota) {
	o.Quotas = v
}

func (o PersonNetwork) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PersonNetwork) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.HomeNetwork) {
		toSerialize["homeNetwork"] = o.HomeNetwork
	}
	toSerialize["isEnabled"] = o.IsEnabled
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.PaidNetwork) {
		toSerialize["paidNetwork"] = o.PaidNetwork
	}
	if !IsNil(o.SubscriptionLevel) {
		toSerialize["subscriptionLevel"] = o.SubscriptionLevel
	}
	if !IsNil(o.Quotas) {
		toSerialize["quotas"] = o.Quotas
	}
	return toSerialize, nil
}

type NullablePersonNetwork struct {
	value *PersonNetwork
	isSet bool
}

func (v NullablePersonNetwork) Get() *PersonNetwork {
	return v.value
}

func (v *NullablePersonNetwork) Set(val *PersonNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullablePersonNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullablePersonNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePersonNetwork(val *PersonNetwork) *NullablePersonNetwork {
	return &NullablePersonNetwork{value: val, isSet: true}
}

func (v NullablePersonNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePersonNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


