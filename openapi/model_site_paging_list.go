/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SitePagingList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SitePagingList{}

// SitePagingList struct for SitePagingList
type SitePagingList struct {
	Pagination Pagination `json:"pagination"`
	Entries []SiteEntry `json:"entries"`
}

// NewSitePagingList instantiates a new SitePagingList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSitePagingList(pagination Pagination, entries []SiteEntry) *SitePagingList {
	this := SitePagingList{}
	this.Pagination = pagination
	this.Entries = entries
	return &this
}

// NewSitePagingListWithDefaults instantiates a new SitePagingList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSitePagingListWithDefaults() *SitePagingList {
	this := SitePagingList{}
	return &this
}

// GetPagination returns the Pagination field value
func (o *SitePagingList) GetPagination() Pagination {
	if o == nil {
		var ret Pagination
		return ret
	}

	return o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value
// and a boolean to check if the value has been set.
func (o *SitePagingList) GetPaginationOk() (*Pagination, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pagination, true
}

// SetPagination sets field value
func (o *SitePagingList) SetPagination(v Pagination) {
	o.Pagination = v
}

// GetEntries returns the Entries field value
func (o *SitePagingList) GetEntries() []SiteEntry {
	if o == nil {
		var ret []SiteEntry
		return ret
	}

	return o.Entries
}

// GetEntriesOk returns a tuple with the Entries field value
// and a boolean to check if the value has been set.
func (o *SitePagingList) GetEntriesOk() ([]SiteEntry, bool) {
	if o == nil {
		return nil, false
	}
	return o.Entries, true
}

// SetEntries sets field value
func (o *SitePagingList) SetEntries(v []SiteEntry) {
	o.Entries = v
}

func (o SitePagingList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SitePagingList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pagination"] = o.Pagination
	toSerialize["entries"] = o.Entries
	return toSerialize, nil
}

type NullableSitePagingList struct {
	value *SitePagingList
	isSet bool
}

func (v NullableSitePagingList) Get() *SitePagingList {
	return v.value
}

func (v *NullableSitePagingList) Set(val *SitePagingList) {
	v.value = val
	v.isSet = true
}

func (v NullableSitePagingList) IsSet() bool {
	return v.isSet
}

func (v *NullableSitePagingList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSitePagingList(val *SitePagingList) *NullableSitePagingList {
	return &NullableSitePagingList{value: val, isSet: true}
}

func (v NullableSitePagingList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSitePagingList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


