/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TagPaging type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TagPaging{}

// TagPaging struct for TagPaging
type TagPaging struct {
	List TagPagingList `json:"list"`
}

// NewTagPaging instantiates a new TagPaging object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagPaging(list TagPagingList) *TagPaging {
	this := TagPaging{}
	this.List = list
	return &this
}

// NewTagPagingWithDefaults instantiates a new TagPaging object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagPagingWithDefaults() *TagPaging {
	this := TagPaging{}
	return &this
}

// GetList returns the List field value
func (o *TagPaging) GetList() TagPagingList {
	if o == nil {
		var ret TagPagingList
		return ret
	}

	return o.List
}

// GetListOk returns a tuple with the List field value
// and a boolean to check if the value has been set.
func (o *TagPaging) GetListOk() (*TagPagingList, bool) {
	if o == nil {
		return nil, false
	}
	return &o.List, true
}

// SetList sets field value
func (o *TagPaging) SetList(v TagPagingList) {
	o.List = v
}

func (o TagPaging) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TagPaging) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["list"] = o.List
	return toSerialize, nil
}

type NullableTagPaging struct {
	value *TagPaging
	isSet bool
}

func (v NullableTagPaging) Get() *TagPaging {
	return v.value
}

func (v *NullableTagPaging) Set(val *TagPaging) {
	v.value = val
	v.isSet = true
}

func (v NullableTagPaging) IsSet() bool {
	return v.isSet
}

func (v *NullableTagPaging) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagPaging(val *TagPaging) *NullableTagPaging {
	return &NullableTagPaging{value: val, isSet: true}
}

func (v NullableTagPaging) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagPaging) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


