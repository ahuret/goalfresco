/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ChildAssociationBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChildAssociationBody{}

// ChildAssociationBody struct for ChildAssociationBody
type ChildAssociationBody struct {
	ChildId string `json:"childId"`
	AssocType string `json:"assocType"`
}

// NewChildAssociationBody instantiates a new ChildAssociationBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChildAssociationBody(childId string, assocType string) *ChildAssociationBody {
	this := ChildAssociationBody{}
	this.ChildId = childId
	this.AssocType = assocType
	return &this
}

// NewChildAssociationBodyWithDefaults instantiates a new ChildAssociationBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChildAssociationBodyWithDefaults() *ChildAssociationBody {
	this := ChildAssociationBody{}
	return &this
}

// GetChildId returns the ChildId field value
func (o *ChildAssociationBody) GetChildId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChildId
}

// GetChildIdOk returns a tuple with the ChildId field value
// and a boolean to check if the value has been set.
func (o *ChildAssociationBody) GetChildIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChildId, true
}

// SetChildId sets field value
func (o *ChildAssociationBody) SetChildId(v string) {
	o.ChildId = v
}

// GetAssocType returns the AssocType field value
func (o *ChildAssociationBody) GetAssocType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssocType
}

// GetAssocTypeOk returns a tuple with the AssocType field value
// and a boolean to check if the value has been set.
func (o *ChildAssociationBody) GetAssocTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssocType, true
}

// SetAssocType sets field value
func (o *ChildAssociationBody) SetAssocType(v string) {
	o.AssocType = v
}

func (o ChildAssociationBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChildAssociationBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["childId"] = o.ChildId
	toSerialize["assocType"] = o.AssocType
	return toSerialize, nil
}

type NullableChildAssociationBody struct {
	value *ChildAssociationBody
	isSet bool
}

func (v NullableChildAssociationBody) Get() *ChildAssociationBody {
	return v.value
}

func (v *NullableChildAssociationBody) Set(val *ChildAssociationBody) {
	v.value = val
	v.isSet = true
}

func (v NullableChildAssociationBody) IsSet() bool {
	return v.isSet
}

func (v *NullableChildAssociationBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChildAssociationBody(val *ChildAssociationBody) *NullableChildAssociationBody {
	return &NullableChildAssociationBody{value: val, isSet: true}
}

func (v NullableChildAssociationBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChildAssociationBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


