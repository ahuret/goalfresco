/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FavoritePaging type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FavoritePaging{}

// FavoritePaging struct for FavoritePaging
type FavoritePaging struct {
	List FavoritePagingList `json:"list"`
}

// NewFavoritePaging instantiates a new FavoritePaging object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFavoritePaging(list FavoritePagingList) *FavoritePaging {
	this := FavoritePaging{}
	this.List = list
	return &this
}

// NewFavoritePagingWithDefaults instantiates a new FavoritePaging object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFavoritePagingWithDefaults() *FavoritePaging {
	this := FavoritePaging{}
	return &this
}

// GetList returns the List field value
func (o *FavoritePaging) GetList() FavoritePagingList {
	if o == nil {
		var ret FavoritePagingList
		return ret
	}

	return o.List
}

// GetListOk returns a tuple with the List field value
// and a boolean to check if the value has been set.
func (o *FavoritePaging) GetListOk() (*FavoritePagingList, bool) {
	if o == nil {
		return nil, false
	}
	return &o.List, true
}

// SetList sets field value
func (o *FavoritePaging) SetList(v FavoritePagingList) {
	o.List = v
}

func (o FavoritePaging) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FavoritePaging) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["list"] = o.List
	return toSerialize, nil
}

type NullableFavoritePaging struct {
	value *FavoritePaging
	isSet bool
}

func (v NullableFavoritePaging) Get() *FavoritePaging {
	return v.value
}

func (v *NullableFavoritePaging) Set(val *FavoritePaging) {
	v.value = val
	v.isSet = true
}

func (v NullableFavoritePaging) IsSet() bool {
	return v.isSet
}

func (v *NullableFavoritePaging) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFavoritePaging(val *FavoritePaging) *NullableFavoritePaging {
	return &NullableFavoritePaging{value: val, isSet: true}
}

func (v NullableFavoritePaging) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFavoritePaging) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


