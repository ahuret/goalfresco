/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PreferenceEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PreferenceEntry{}

// PreferenceEntry struct for PreferenceEntry
type PreferenceEntry struct {
	Entry Preference `json:"entry"`
}

// NewPreferenceEntry instantiates a new PreferenceEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPreferenceEntry(entry Preference) *PreferenceEntry {
	this := PreferenceEntry{}
	this.Entry = entry
	return &this
}

// NewPreferenceEntryWithDefaults instantiates a new PreferenceEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPreferenceEntryWithDefaults() *PreferenceEntry {
	this := PreferenceEntry{}
	return &this
}

// GetEntry returns the Entry field value
func (o *PreferenceEntry) GetEntry() Preference {
	if o == nil {
		var ret Preference
		return ret
	}

	return o.Entry
}

// GetEntryOk returns a tuple with the Entry field value
// and a boolean to check if the value has been set.
func (o *PreferenceEntry) GetEntryOk() (*Preference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entry, true
}

// SetEntry sets field value
func (o *PreferenceEntry) SetEntry(v Preference) {
	o.Entry = v
}

func (o PreferenceEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PreferenceEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["entry"] = o.Entry
	return toSerialize, nil
}

type NullablePreferenceEntry struct {
	value *PreferenceEntry
	isSet bool
}

func (v NullablePreferenceEntry) Get() *PreferenceEntry {
	return v.value
}

func (v *NullablePreferenceEntry) Set(val *PreferenceEntry) {
	v.value = val
	v.isSet = true
}

func (v NullablePreferenceEntry) IsSet() bool {
	return v.isSet
}

func (v *NullablePreferenceEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreferenceEntry(val *PreferenceEntry) *NullablePreferenceEntry {
	return &NullablePreferenceEntry{value: val, isSet: true}
}

func (v NullablePreferenceEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreferenceEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


