/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GroupEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupEntry{}

// GroupEntry struct for GroupEntry
type GroupEntry struct {
	Entry Group `json:"entry"`
}

// NewGroupEntry instantiates a new GroupEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupEntry(entry Group) *GroupEntry {
	this := GroupEntry{}
	this.Entry = entry
	return &this
}

// NewGroupEntryWithDefaults instantiates a new GroupEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupEntryWithDefaults() *GroupEntry {
	this := GroupEntry{}
	return &this
}

// GetEntry returns the Entry field value
func (o *GroupEntry) GetEntry() Group {
	if o == nil {
		var ret Group
		return ret
	}

	return o.Entry
}

// GetEntryOk returns a tuple with the Entry field value
// and a boolean to check if the value has been set.
func (o *GroupEntry) GetEntryOk() (*Group, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entry, true
}

// SetEntry sets field value
func (o *GroupEntry) SetEntry(v Group) {
	o.Entry = v
}

func (o GroupEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["entry"] = o.Entry
	return toSerialize, nil
}

type NullableGroupEntry struct {
	value *GroupEntry
	isSet bool
}

func (v NullableGroupEntry) Get() *GroupEntry {
	return v.value
}

func (v *NullableGroupEntry) Set(val *GroupEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupEntry(val *GroupEntry) *NullableGroupEntry {
	return &NullableGroupEntry{value: val, isSet: true}
}

func (v NullableGroupEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


