/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"github.com/ahuret/goalfresco/time"
)

// checks if the SiteMembershipRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SiteMembershipRequest{}

// SiteMembershipRequest struct for SiteMembershipRequest
type SiteMembershipRequest struct {
	Id string `json:"id"`
	CreatedAt time.Time `json:"createdAt"`
	Site Site `json:"site"`
	Message *string `json:"message,omitempty"`
}

// NewSiteMembershipRequest instantiates a new SiteMembershipRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSiteMembershipRequest(id string, createdAt time.Time, site Site) *SiteMembershipRequest {
	this := SiteMembershipRequest{}
	this.Id = id
	this.CreatedAt = createdAt
	this.Site = site
	return &this
}

// NewSiteMembershipRequestWithDefaults instantiates a new SiteMembershipRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSiteMembershipRequestWithDefaults() *SiteMembershipRequest {
	this := SiteMembershipRequest{}
	return &this
}

// GetId returns the Id field value
func (o *SiteMembershipRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SiteMembershipRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SiteMembershipRequest) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *SiteMembershipRequest) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *SiteMembershipRequest) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *SiteMembershipRequest) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetSite returns the Site field value
func (o *SiteMembershipRequest) GetSite() Site {
	if o == nil {
		var ret Site
		return ret
	}

	return o.Site
}

// GetSiteOk returns a tuple with the Site field value
// and a boolean to check if the value has been set.
func (o *SiteMembershipRequest) GetSiteOk() (*Site, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Site, true
}

// SetSite sets field value
func (o *SiteMembershipRequest) SetSite(v Site) {
	o.Site = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *SiteMembershipRequest) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteMembershipRequest) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *SiteMembershipRequest) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *SiteMembershipRequest) SetMessage(v string) {
	o.Message = &v
}

func (o SiteMembershipRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SiteMembershipRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["site"] = o.Site
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableSiteMembershipRequest struct {
	value *SiteMembershipRequest
	isSet bool
}

func (v NullableSiteMembershipRequest) Get() *SiteMembershipRequest {
	return v.value
}

func (v *NullableSiteMembershipRequest) Set(val *SiteMembershipRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSiteMembershipRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSiteMembershipRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSiteMembershipRequest(val *SiteMembershipRequest) *NullableSiteMembershipRequest {
	return &NullableSiteMembershipRequest{value: val, isSet: true}
}

func (v NullableSiteMembershipRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSiteMembershipRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


