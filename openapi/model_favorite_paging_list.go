/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FavoritePagingList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FavoritePagingList{}

// FavoritePagingList struct for FavoritePagingList
type FavoritePagingList struct {
	Pagination Pagination `json:"pagination"`
	Entries []FavoriteEntry `json:"entries"`
}

// NewFavoritePagingList instantiates a new FavoritePagingList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFavoritePagingList(pagination Pagination, entries []FavoriteEntry) *FavoritePagingList {
	this := FavoritePagingList{}
	this.Pagination = pagination
	this.Entries = entries
	return &this
}

// NewFavoritePagingListWithDefaults instantiates a new FavoritePagingList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFavoritePagingListWithDefaults() *FavoritePagingList {
	this := FavoritePagingList{}
	return &this
}

// GetPagination returns the Pagination field value
func (o *FavoritePagingList) GetPagination() Pagination {
	if o == nil {
		var ret Pagination
		return ret
	}

	return o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value
// and a boolean to check if the value has been set.
func (o *FavoritePagingList) GetPaginationOk() (*Pagination, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pagination, true
}

// SetPagination sets field value
func (o *FavoritePagingList) SetPagination(v Pagination) {
	o.Pagination = v
}

// GetEntries returns the Entries field value
func (o *FavoritePagingList) GetEntries() []FavoriteEntry {
	if o == nil {
		var ret []FavoriteEntry
		return ret
	}

	return o.Entries
}

// GetEntriesOk returns a tuple with the Entries field value
// and a boolean to check if the value has been set.
func (o *FavoritePagingList) GetEntriesOk() ([]FavoriteEntry, bool) {
	if o == nil {
		return nil, false
	}
	return o.Entries, true
}

// SetEntries sets field value
func (o *FavoritePagingList) SetEntries(v []FavoriteEntry) {
	o.Entries = v
}

func (o FavoritePagingList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FavoritePagingList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pagination"] = o.Pagination
	toSerialize["entries"] = o.Entries
	return toSerialize, nil
}

type NullableFavoritePagingList struct {
	value *FavoritePagingList
	isSet bool
}

func (v NullableFavoritePagingList) Get() *FavoritePagingList {
	return v.value
}

func (v *NullableFavoritePagingList) Set(val *FavoritePagingList) {
	v.value = val
	v.isSet = true
}

func (v NullableFavoritePagingList) IsSet() bool {
	return v.isSet
}

func (v *NullableFavoritePagingList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFavoritePagingList(val *FavoritePagingList) *NullableFavoritePagingList {
	return &NullableFavoritePagingList{value: val, isSet: true}
}

func (v NullableFavoritePagingList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFavoritePagingList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


