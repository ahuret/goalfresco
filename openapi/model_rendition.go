/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Rendition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Rendition{}

// Rendition struct for Rendition
type Rendition struct {
	Id *string `json:"id,omitempty"`
	Content *ContentInfo `json:"content,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewRendition instantiates a new Rendition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRendition() *Rendition {
	this := Rendition{}
	return &this
}

// NewRenditionWithDefaults instantiates a new Rendition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenditionWithDefaults() *Rendition {
	this := Rendition{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Rendition) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Rendition) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Rendition) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Rendition) SetId(v string) {
	o.Id = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *Rendition) GetContent() ContentInfo {
	if o == nil || IsNil(o.Content) {
		var ret ContentInfo
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Rendition) GetContentOk() (*ContentInfo, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *Rendition) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given ContentInfo and assigns it to the Content field.
func (o *Rendition) SetContent(v ContentInfo) {
	o.Content = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Rendition) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Rendition) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Rendition) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Rendition) SetStatus(v string) {
	o.Status = &v
}

func (o Rendition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Rendition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableRendition struct {
	value *Rendition
	isSet bool
}

func (v NullableRendition) Get() *Rendition {
	return v.value
}

func (v *NullableRendition) Set(val *Rendition) {
	v.value = val
	v.isSet = true
}

func (v NullableRendition) IsSet() bool {
	return v.isSet
}

func (v *NullableRendition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRendition(val *Rendition) *NullableRendition {
	return &NullableRendition{value: val, isSet: true}
}

func (v NullableRendition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRendition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


