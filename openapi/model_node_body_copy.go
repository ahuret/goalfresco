/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NodeBodyCopy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NodeBodyCopy{}

// NodeBodyCopy struct for NodeBodyCopy
type NodeBodyCopy struct {
	TargetParentId string `json:"targetParentId"`
	// The name must not contain spaces or the following special characters: * \" < > \\ / ? : and |. The character . must not be used at the end of the name. 
	Name *string `json:"name,omitempty"`
}

// NewNodeBodyCopy instantiates a new NodeBodyCopy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeBodyCopy(targetParentId string) *NodeBodyCopy {
	this := NodeBodyCopy{}
	this.TargetParentId = targetParentId
	return &this
}

// NewNodeBodyCopyWithDefaults instantiates a new NodeBodyCopy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeBodyCopyWithDefaults() *NodeBodyCopy {
	this := NodeBodyCopy{}
	return &this
}

// GetTargetParentId returns the TargetParentId field value
func (o *NodeBodyCopy) GetTargetParentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetParentId
}

// GetTargetParentIdOk returns a tuple with the TargetParentId field value
// and a boolean to check if the value has been set.
func (o *NodeBodyCopy) GetTargetParentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetParentId, true
}

// SetTargetParentId sets field value
func (o *NodeBodyCopy) SetTargetParentId(v string) {
	o.TargetParentId = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NodeBodyCopy) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeBodyCopy) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NodeBodyCopy) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NodeBodyCopy) SetName(v string) {
	o.Name = &v
}

func (o NodeBodyCopy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NodeBodyCopy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["targetParentId"] = o.TargetParentId
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableNodeBodyCopy struct {
	value *NodeBodyCopy
	isSet bool
}

func (v NullableNodeBodyCopy) Get() *NodeBodyCopy {
	return v.value
}

func (v *NullableNodeBodyCopy) Set(val *NodeBodyCopy) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeBodyCopy) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeBodyCopy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeBodyCopy(val *NodeBodyCopy) *NullableNodeBodyCopy {
	return &NullableNodeBodyCopy{value: val, isSet: true}
}

func (v NullableNodeBodyCopy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeBodyCopy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


