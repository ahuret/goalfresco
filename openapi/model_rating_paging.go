/*
Alfresco Content Services REST API

**Core API**  Provides access to the core features of Alfresco Content Services. 

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RatingPaging type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RatingPaging{}

// RatingPaging struct for RatingPaging
type RatingPaging struct {
	List RatingPagingList `json:"list"`
}

// NewRatingPaging instantiates a new RatingPaging object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRatingPaging(list RatingPagingList) *RatingPaging {
	this := RatingPaging{}
	this.List = list
	return &this
}

// NewRatingPagingWithDefaults instantiates a new RatingPaging object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRatingPagingWithDefaults() *RatingPaging {
	this := RatingPaging{}
	return &this
}

// GetList returns the List field value
func (o *RatingPaging) GetList() RatingPagingList {
	if o == nil {
		var ret RatingPagingList
		return ret
	}

	return o.List
}

// GetListOk returns a tuple with the List field value
// and a boolean to check if the value has been set.
func (o *RatingPaging) GetListOk() (*RatingPagingList, bool) {
	if o == nil {
		return nil, false
	}
	return &o.List, true
}

// SetList sets field value
func (o *RatingPaging) SetList(v RatingPagingList) {
	o.List = v
}

func (o RatingPaging) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RatingPaging) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["list"] = o.List
	return toSerialize, nil
}

type NullableRatingPaging struct {
	value *RatingPaging
	isSet bool
}

func (v NullableRatingPaging) Get() *RatingPaging {
	return v.value
}

func (v *NullableRatingPaging) Set(val *RatingPaging) {
	v.value = val
	v.isSet = true
}

func (v NullableRatingPaging) IsSet() bool {
	return v.isSet
}

func (v *NullableRatingPaging) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRatingPaging(val *RatingPaging) *NullableRatingPaging {
	return &NullableRatingPaging{value: val, isSet: true}
}

func (v NullableRatingPaging) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRatingPaging) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


